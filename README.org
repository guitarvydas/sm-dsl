* intro
  Simple V0 version of a state machine DSL.  See comments in test.lisp for details.
* under development
* 1a. generate stacks.lisp
#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*/*~")
 (ql:quickload :sm-dsl)
#+end_src

#+name: dsl
#+begin_src lisp :results output
  (load (sm-dsl::path "generate-stacks.lisp"))
#+end_src
#+name: dsl
#+begin_src lisp :results output
  (sm-dsl::generate-stacks)))
#+end_src

#+name: dsl
#+begin_src lisp :results output
#+end_src

* 1b. generate sm-dsl.lisp
#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*/*~")
 (ql:quickload :sm-dsl/generate)
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| generates sm-dsl.lisp |#
 (sm-dsl::generate "SM-DSL")
#+end_src

* use
#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*~")
 (ql:quickload :stack-dsl/use)
#+end_src

* use (development only)
#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*~")
 (ql:quickload :sm-dsl)
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
   (load (sm-dsl::path "stacks.lisp"))  #| stacks.lisp is generated above |#
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
   (load (sm-dsl::path "classes.lisp"))
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
   (load (sm-dsl::path "macros.lisp"))
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
   (load (sm-dsl::path "sm-dsl.lisp"))  #| sm-dsl.lisp is generated above |#
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
  (load (sm-dsl::path "mechanisms.lisp"))
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| checks that :sm-dsl/use can be loaded |#
  #| (ql:quickload :sm-dsl/use) |#
  (load (sm-dsl::path "transpile.lisp"))
#+end_src

* results
#+RESULTS: dsl

